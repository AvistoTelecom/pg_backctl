# pg_backctl Backup Configuration File
#
# This file contains the default configuration for pg_backctl backups.
# Copy this file to 'backup.conf' and customize for your environment.
#
# Usage:
#   ./create_backup.sh -c /path/to/backup.conf
#   ./create_backup.sh --config backup.conf
#
# Note: Command-line arguments override config file values

[database]
# Docker Compose service name (REQUIRED)
service = postgres

# Path to docker-compose file (REQUIRED)
compose_file = docker-compose.yml

# Database connection details
# port = 5432
# user = postgres

[destination]
# Backup destination - choose ONE of the following:

# Option 1: Local backup path
# Uncomment to use local storage
# path = /backups/postgres

# Option 2: S3 backup
# Uncomment to use S3 storage
# s3_url = s3://mybucket
# s3_endpoint = https://s3.region.provider.com

# S3 path prefix (backups will be stored at s3://bucket/prefix/LABEL/)
# Default: "backups" (recommended for organization)
# For backward compatibility with other tools, you can use:
#   s3_prefix = postgresql-cluster/base
# Or leave empty for root level:
#   s3_prefix =
s3_prefix = backups

[backup]
# Backup label (optional - auto-generated timestamp if not specified)
# label = manual-backup-20250124

# Compression method: gzip, bzip2, none (default: gzip)
compression = gzip

# Minimum free disk space required (in GB) before starting backup
# min_disk_space_gb = 5

# Retention policy - cleanup old backups from S3
# Choose ONE of the following retention strategies:

# Option 1: Keep backups for N days
# retention_days = 30

# Option 2: Keep last N backups
# retention_count = 10

# If both are set, retention_count takes precedence
# If neither is set, no automatic cleanup is performed

[aws]
# AWS credentials for S3 uploads
# Can also be set via environment variables or .env file
# access_key = YOUR_ACCESS_KEY
# secret_key = YOUR_SECRET_KEY
# region = us-east-1

[docker]
# pg_backctl Docker image for S3 uploads and restores
image = pg_backctl:latest

[advanced]
# Future features (not yet implemented)
# encryption =
# incremental = false
